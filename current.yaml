###############################################################################
# Index with various keys for ROS Kinetic
###############################################################################
#
# Why
# ===
#
# We have repository files everywhere...easy to forget/lose track of them.
#
# Quick Start
# ===========
#
# At it's simplest, this is just a key to a url where a repos can be
# found. You can then install the sources into a catkin environment.
#
# e.g. for the ecl key-value pair
#
#     ecl: 'https://raw.github.com/stonier/ecl_core/indigo/ecl.repos'
#
# e.g. to download and compile ecl from key-value pair
#
#     vci find ecl
#
# Mixins
# ======
#
# When you use a key-value pair multiply, combine them in a list to form new workspaces.
# Downloading and compiling works in the same way.
#
# e.g. arm_bootstrap:
#
#    arm_bootstrap: [_catkin, _drone_bootstrap, yaml_cpp, respawn]
#
###############################################################################

# repos indexed as helpers, use a '_' convention for sorting
_catkin: 'kinetic/catkin.repos'

# some examples
bob      : 'kinetic/bob_the_builder.repos'
catkin   : [_catkin]
cost_map : 'kinetic/cost_map.repos'
drake    : 'tri/drake.repos'
ecl      : 'kinetic/ecl.repos'
ecl_tools: 'kinetic/ecl_tools.repos'
ecl_lite : 'kinetic/ecl_lite.repos'
kobuki   : 'kinetic/kobuki.repos'
latex    : 'kinetic/latex.repos'
py_trees : 'kinetic/py_trees.repos'
reveal   : 'kinetic/reveal.repos'
rocon    : 'kinetic/rocon.repos'
trolls   : 'kinetic/trolls.repos'
yaml_cpp : 'kinetic/yaml_cpp.repos'
